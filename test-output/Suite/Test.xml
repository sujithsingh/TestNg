<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-821S2OPE" name="Test" tests="2" failures="0" timestamp="8 May 2019 12:02:34 GMT" time="1.961" errors="0">
  <testcase name="@BeforeClass launch" time="0.0" classname="org.test.TestNgSample.FlipCart">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Unexpected error launching Internet Explorer. Browser zoom level was set to 125%. It should be set to 100%
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;LAPTOP-821S2OPE&amp;apos;, ip: &amp;apos;192.168.43.92&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_192&amp;apos;
Driver info: driver.version: InternetExplorerDriver
remote stacktrace: ">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Unexpected error launching Internet Explorer. Browser zoom level was set to 125%. It should be set to 100%
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-821S2OPE', ip: '192.168.43.92', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_192'
Driver info: driver.version: InternetExplorerDriver
remote stacktrace: 
	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)
	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.findFirst(Unknown Source)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
	at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:221)
	at org.openqa.selenium.ie.InternetExplorerDriver.<init>(InternetExplorerDriver.java:213)
	at org.openqa.selenium.ie.InternetExplorerDriver.<init>(InternetExplorerDriver.java:150)
	at org.test.TestNgSample.FlipCart.launch(FlipCart.java:24)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass launch -->
  <testcase name="@BeforeMethod startTime" time="0.0" classname="org.test.TestNgSample.FlipCart">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTime -->
  <testcase name="@AfterMethod endTime" time="0.0" classname="org.test.TestNgSample.FlipCart">
    <skipped/>
  </testcase> <!-- @AfterMethod endTime -->
  <testcase name="@BeforeMethod startTime" time="0.0" classname="org.test.TestNgSample.FlipCart">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTime -->
  <testcase name="@AfterMethod endTime" time="0.0" classname="org.test.TestNgSample.FlipCart">
    <skipped/>
  </testcase> <!-- @AfterMethod endTime -->
  <testcase name="@AfterClass close" time="0.0" classname="org.test.TestNgSample.FlipCart">
    <skipped/>
  </testcase> <!-- @AfterClass close -->
  <testcase name="sysout" time="0.0" classname="org.test.TestNgSample.FlipCart">
    <skipped/>
  </testcase> <!-- sysout -->
  <testcase name="test" time="0.0" classname="org.test.TestNgSample.FlipCart">
    <skipped/>
  </testcase> <!-- test -->
</testsuite> <!-- Test -->
